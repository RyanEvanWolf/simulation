#!/usr/bin/env python


# import math
# import time

# import pickle

# import cv2
# import numpy as np
# import rospy
# from cv_bridge import CvBridge

# from dataset.simulation import *
# from bumblebee.baseTypes import *
# from bumblebee.stereo import stereoCamera
# from bumblebee.utils import createDir
# from bumblebee.drawing import *



from bumblebee.motion import *

from simulation.path import *
from simulation.settings import *
import tf.transformations
from geometry_msgs.msg import TransformStamped,Transform,Quaternion,Vector3

from simulation.srv import idealSimulation,idealSimulationResponse,idealSimulationRequest
import pickle
import os
import rospy

import time
mset=MotionCategorySettings()

####gen slow straight 



nMotions=1

totalSeconds=1

fps=1/15.0

nFrames=int(totalSeconds/fps)

rospy.init_node("straight_path_node")


motions=genStraightTransform(mset["Medium"],nFrames)
#motions+=genTurningTransform(mset["Slow"],15)
#motions+=genStraightTransform(mset["Medium"],nFrames)
print("total delta poses",len(motions))

simPath=simTFpub(motions)



print("publishing Poses")
simPath.start()

print("not")
time.sleep(0.5)


print("attempting Connection")
ideal = rospy.ServiceProxy('/idealSimulation', idealSimulation)
print("Connected")

r=idealSimulationRequest()

r.interMotions=simPath.frameNames
r.nTracks=400


print(r)
ans=ideal(r)


print("Closing")
#rospy.spin()


