#!/usr/bin/env python




from bumblebee.motion import *

from simulation.path import *
from simulation.settings import *
import tf.transformations
from geometry_msgs.msg import TransformStamped,Transform,Quaternion,Vector3
from bumblebee.baseTypes import basicGraph
from simulation.dataset import stereo_simulator_node
import pickle
import os
import rospy

import time
import scipy.stats.mstats as stat
from scipy.stats import norm,cauchy
import matplotlib.pyplot as plt
import matplotlib.style as sty
from mpl_toolkits.mplot3d import Axes3D
sty.use("seaborn")

gCOlor=[(1,0,0,0.8),(0,1,0,0.8),(0,0,1,0.8),(0.5,0.5,0,0.8)]
gNames=["0.05","0.1","0.2","0.3"]

rootFolder="/media/ryan/EXTRA/Simulation/200"

setFiles=os.listdir(rootFolder)
##################################
##################################
###Get N Inliers per frame
################################
###############################
###Get inliers RMS per frame
fig ,ax1=plt.subplots(1,1)
nInliers=[]
nRMS=[]
for f in setFiles:
    allFiles=rootFolder+"/"+f
    if(f[f.rindex("."):]==".gauss"):
        print(allFiles)
        with open(allFiles,"r") as fread:
            inData=pickle.load(fread)
            nInliers.append(inData.getInlierMotion())
            nRMS.append(inData.getInlierRMS())

for g in range(len(nInliers)):
    ax1.scatter(nInliers[g],nRMS[g],label=gNames[g],color=gCOlor[g])
fig.suptitle("$T_{track}=200$")
ax1.set_xlabel("Total Inlier Detections")
ax1.set_ylabel("Average Inlier Landmark RMS Error")
ax1.legend()
plt.show()

